axis.title = element_blank(),
#panel.grid = element_blank(),
plot.margin = unit(rep(-2,5), "cm")
)
library(readxl)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(viridis)
PatientObservations <- read.csv("C:/Users/rebim/Desktop/Tesi/PASC Analysis/Dati ICSM 4CE/LocalPatientObservations.csv")
PatientSummary<- read.csv("C:/Users/rebim/Desktop/Tesi/PASC Analysis/Dati ICSM 4CE/LocalPatientSummary.csv")
rules <- read_excel("C:/Users/rebim/Desktop/Tesi/PASC Analysis/Rule based Phenotyping/PASCPhenRules.xlsx")
rules <- na.omit(rules)
colnames(rules)[colnames(rules)=="PASC Phenotype"]<-"PASCPhenotype"
PatientObservations <- PatientObservations%>%
select(-value,-siteid)
data <- PatientSummary %>%
select(patient_num, sex, admission_date) %>%
merge(PatientObservations, by = "patient_num")
data$calendar_date <- as.Date(data$admission_date)+data$days_since_admission
data <- data %>%
mutate(stage = case_when(days_since_admission > 90 ~ "long",
days_since_admission > 30 ~ "post",
days_since_admission > -14 ~ "acute",
TRUE ~ 'pre'))%>%
select(c(1,2,3,4,7,8,5,6)) %>%
mutate(stage = factor(stage, levels = c("pre", "acute", "post", "long")))
phenotypes <- unique(rules$PASCPhenotype)
tot.count <- data.frame()
Phen.data.tot <- data.frame()
for (i in 1:length(phenotypes)) {
Phen.rules <- rules %>% filter(PASCPhenotype == phenotypes[i])
Phen.data <- data[paste(gsub(".*-", "", data$concept_type), data$concept_code) %in% paste(Phen.rules$Coding, Phen.rules$Code),]
counts <- table(Phen.data%>%select(stage))
if (sum(counts)>0) {
tot.count<-rbind(tot.count,c(phenotypes[i], counts))
Phen.data$phenotype <- paste(phenotypes[i])
Phen.data.tot<-rbind(Phen.data.tot, Phen.data)
}
}
names(tot.count)<- c("Phenotype", "pre", "acute", "post", "long")
Phen.data.tot<-Phen.data.tot %>% mutate(stage = factor(stage, levels = c("long", "post", "acute", "pre")))
empty_bar <- 1
to_add <- data.frame( matrix(NA, empty_bar, ncol(Phen.data.tot)) )
colnames(to_add) <- colnames(Phen.data.tot)
to_add$stage <- levels(Phen.data.tot$stage)[1]
#to_add$group <- rep(levels(data$group), each=empty_bar)
Phen.data.tot <- rbind(Phen.data.tot, to_add)
#Phen.data.tot <- data %>% arrange(group)
#data$id <- seq(1, nrow(data))
label_data_Phen <- Phen.data.tot%>% group_by(phenotype) %>% summarize(tot = n())
number_of_bar <- nrow(label_data_Phen)
label_data_Phen$id <- 1:number_of_bar
angle <- 90 - 360 * (label_data_Phen$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
label_data_Phen$hjust <- ifelse( angle < -90, 1, 0)
label_data_Phen$angle <- ifelse(angle < -90, angle+180, angle)
ggplot(Phen.data.tot) +
# Add the stacked bar
geom_bar(aes(phenotype, fill=stage), stat="count", alpha=0.5) +
scale_fill_viridis(name = "Stage:", labels = c("Long (90, )", "Post (30, 90]", "Acute (-14, 30]", "Pre ( ,-14]"),discrete=TRUE)+
ggplot2::annotate("text", x=rep(max(label_data_Phen$id),4),y = c(0, 10, 20, 30), label = c("", "10", "20", "30") , color="grey", size=4 , fontface = "bold", angle=0, hjust=1) +
coord_polar()+
geom_text(data=label_data_Phen, aes(x=id, y=tot+2, label=phenotype, hjust=hjust), color="black",fontface="bold",alpha=0.6, size=4, angle= label_data_Phen$angle, inherit.aes = FALSE ) +
#ggplot2::annotate("text", y = c(0, 5, 10, 15, 20), label = c("0", "5", "10", "15", "20") , color="grey", size=3 , angle=0, hjust=1) +
theme_minimal() +
theme(
#legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
#panel.grid = element_blank(),
plot.margin = unit(rep(-2,5), "cm")
)
View(Phen.data.tot)
label_data_Phen <- Phen.data.tot%>% group_by(phenotype) %>% summarise(tot = n())
View(Phen.data.tot)
label_data_Phen <- Phen.data.tot%>% group_by(phenotype) %>% summarise(tot = n())
number_of_bar <- nrow(label_data_Phen)
label_data_Phen$id <- 1:number_of_bar
angle <- 90 - 360 * (label_data_Phen$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
label_data_Phen$hjust <- ifelse( angle < -90, 1, 0)
label_data_Phen$angle <- ifelse(angle < -90, angle+180, angle)
phenotypes <- unique(rules$PASCPhenotype)
tot.count <- data.frame()
Phen.data.tot <- data.frame()
for (i in 1:length(phenotypes)) {
Phen.rules <- rules %>% filter(PASCPhenotype == phenotypes[i])
Phen.data <- data[paste(gsub(".*-", "", data$concept_type), data$concept_code) %in% paste(Phen.rules$Coding, Phen.rules$Code),]
counts <- table(Phen.data%>%select(stage))
if (sum(counts)>0) {
tot.count<-rbind(tot.count,c(phenotypes[i], counts))
Phen.data$phenotype <- paste(phenotypes[i])
Phen.data.tot<-rbind(Phen.data.tot, Phen.data)
}
}
names(tot.count)<- c("Phenotype", "pre", "acute", "post", "long")
Phen.data.tot<-Phen.data.tot %>% mutate(stage = factor(stage, levels = c("long", "post", "acute", "pre")))
label_data_Phen <- Phen.data.tot%>% group_by(phenotype) %>% summarise(tot = n())
number_of_bar <- nrow(label_data_Phen)
label_data_Phen$id <- 1:number_of_bar
angle <- 90 - 360 * (label_data_Phen$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
label_data_Phen$hjust <- ifelse( angle < -90, 1, 0)
label_data_Phen$angle <- ifelse(angle < -90, angle+180, angle)
empty_bar <- 1
to_add <- data.frame( matrix(NA, empty_bar, ncol(Phen.data.tot)) )
colnames(to_add) <- colnames(Phen.data.tot)
to_add$stage <- levels(Phen.data.tot$stage)[1]
#to_add$group <- rep(levels(data$group), each=empty_bar)
Phen.data.tot <- rbind(Phen.data.tot, to_add)
#Phen.data.tot <- data %>% arrange(group)
#data$id <- seq(1, nrow(data))
label_data_Phen <- Phen.data.tot%>% group_by(phenotype) %>% dplyr::summarise(tot = n())
number_of_bar <- nrow(label_data_Phen)
label_data_Phen$id <- 1:number_of_bar
angle <- 90 - 360 * (label_data_Phen$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
label_data_Phen$hjust <- ifelse( angle < -90, 1, 0)
label_data_Phen$angle <- ifelse(angle < -90, angle+180, angle)
ggplot(Phen.data.tot) +
# Add the stacked bar
geom_bar(aes(phenotype, fill=stage), stat="count", alpha=0.5) +
scale_fill_viridis(name = "Stage:", labels = c("Long (90, )", "Post (30, 90]", "Acute (-14, 30]", "Pre ( ,-14]"),discrete=TRUE)+
ggplot2::annotate("text", x=rep(max(label_data_Phen$id),4),y = c(0, 10, 20, 30), label = c("", "10", "20", "30") , color="grey", size=4 , fontface = "bold", angle=0, hjust=1) +
coord_polar()+
geom_text(data=label_data_Phen, aes(x=id, y=tot+2, label=phenotype, hjust=hjust), color="black",fontface="bold",alpha=0.6, size=4, angle= label_data_Phen$angle, inherit.aes = FALSE ) +
#ggplot2::annotate("text", y = c(0, 5, 10, 15, 20), label = c("0", "5", "10", "15", "20") , color="grey", size=3 , angle=0, hjust=1) +
theme_minimal() +
theme(
#legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
#panel.grid = element_blank(),
plot.margin = unit(rep(-2,5), "cm")
)
l = c("a", "b", "c", "d", "e", "f", "g", "h", "questa deve stare\nsu piu righe", "j", "k", "l", "m", "n", "p")
ggplot(Phen.data.tot) +
# Add the stacked bar
geom_bar(aes(phenotype, fill=stage), stat="count", alpha=0.5) +
scale_fill_viridis(name = "Stage:", labels = c("Long (90, )", "Post (30, 90]", "Acute (-14, 30]", "Pre ( ,-14]"),discrete=TRUE)+
ggplot2::annotate("text", x=rep(max(label_data_Phen$id),4),y = c(0, 10, 20, 30), label = c("", "10", "20", "30") , color="grey", size=4 , fontface = "bold", angle=0, hjust=1) +
coord_polar()+
geom_text(data=label_data_Phen, aes(x=id, y=tot+2, label=l, hjust=hjust), color="black",fontface="bold",alpha=0.6, size=4, angle= label_data_Phen$angle, inherit.aes = FALSE ) +
#ggplot2::annotate("text", y = c(0, 5, 10, 15, 20), label = c("0", "5", "10", "15", "20") , color="grey", size=3 , angle=0, hjust=1) +
theme_minimal() +
theme(
#legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
#panel.grid = element_blank(),
plot.margin = unit(rep(-2,5), "cm")
)
l<-c(l,NA)
ggplot(Phen.data.tot) +
# Add the stacked bar
geom_bar(aes(phenotype, fill=stage), stat="count", alpha=0.5) +
scale_fill_viridis(name = "Stage:", labels = c("Long (90, )", "Post (30, 90]", "Acute (-14, 30]", "Pre ( ,-14]"),discrete=TRUE)+
ggplot2::annotate("text", x=rep(max(label_data_Phen$id),4),y = c(0, 10, 20, 30), label = c("", "10", "20", "30") , color="grey", size=4 , fontface = "bold", angle=0, hjust=1) +
coord_polar()+
geom_text(data=label_data_Phen, aes(x=id, y=tot+2, label=l, hjust=hjust), color="black",fontface="bold",alpha=0.6, size=4, angle= label_data_Phen$angle, inherit.aes = FALSE ) +
#ggplot2::annotate("text", y = c(0, 5, 10, 15, 20), label = c("0", "5", "10", "15", "20") , color="grey", size=3 , angle=0, hjust=1) +
theme_minimal() +
theme(
#legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
#panel.grid = element_blank(),
plot.margin = unit(rep(-2,5), "cm")
)
ggplot(Phen.data.tot) +
# Add the stacked bar
geom_bar(aes(phenotype, fill=stage), stat="count", alpha=0.5) +
scale_fill_viridis(name = "Stage:", labels = c("Long (90, )", "Post (30, 90]", "Acute (-14, 30]", "Pre ( ,-14]"),discrete=TRUE)+
ggplot2::annotate("text", x=rep(max(label_data_Phen$id),4),y = c(0, 10, 20, 30), label = c("", "10", "20", "30") , color="grey", size=4 , fontface = "bold", angle=0, hjust=1) +
coord_polar()+
geom_text(data=label_data_Phen, aes(x=id, y=tot+2, label=phenotype, hjust=hjust), color="black",fontface="bold",alpha=0.6, size=4, angle= label_data_Phen$angle, inherit.aes = FALSE ) +
#ggplot2::annotate("text", y = c(0, 5, 10, 15, 20), label = c("0", "5", "10", "15", "20") , color="grey", size=3 , angle=0, hjust=1) +
theme_minimal() +
theme(
#legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
#panel.grid = element_blank(),
plot.margin = unit(rep(-2,5), "cm")
)
label_data_Phen
label_data_Phen$phenotype
str_count("Reaction to severe stress, and adjustment disorder", " ")
str_extract("Reaction to severe stress, and adjustment disorder", " ")
str_split("Reaction to severe stress, and adjustment disorder", " ")
length(str_split("Reaction to severe stress, and adjustment disorder", " "))
length(str_split("Reaction to severe stress, and adjustment disorder", " ")[1])
length(str_split("Reaction to severe stress, and adjustment disorder", " ")[[1]])
length(str_split("Reaction to severe stress, and adjustment disorder", " ")[[1]])/2
round(length(str_split("Reaction to severe stress, and adjustment disorder", " ")[[1]])/2)
str_split("Reaction to severe stress, and adjustment disorder", " ")[[1]]
str_split("Reaction to severe stress, and adjustment disorder", " ")[[1]][1:4]
c(str_split("Reaction to severe stress, and adjustment disorder", " ")[[1]][1:4], "\n",str_split("Reaction to severe stress, and adjustment disorder", " ")[[1]][5:7])
str(c(str_split("Reaction to severe stress, and adjustment disorder", " ")[[1]][1:4], "\n",str_split("Reaction to severe stress, and adjustment disorder", " ")[[1]][5:7]))
s<-"Reaction to severe stress, and adjustment disorder"
which(strsplit(s, "")[[1]]==" ")
median(which(strsplit(s, "")[[1]]==" "))
which(strsplit(s, "")[[1]]==" ")[length(which(strsplit(s, "")[[1]]==" "))/2]
substr(which(strsplit(s, "")[[1]]==" ")[length(which(strsplit(s, "")[[1]]==" "))/2],which(strsplit(s, "")[[1]]==" ")[length(which(strsplit(s, "")[[1]]==" "))/2], "\n")
substr(s,which(strsplit(s, "")[[1]]==" ")[length(which(strsplit(s, "")[[1]]==" "))/2],which(strsplit(s, "")[[1]]==" ")[length(which(strsplit(s, "")[[1]]==" "))/2]) <- "\n"
l <- Phen.data.tot$phenotype
l[l=="Reaction to severe stress, and adjustment disorder"]
l <- label_data_Phen$phenotype
l=="Reaction to severe stress, and adjustment disorder"
l[l=="Reaction to severe stress, and adjustment disorder"]
l[l=="Reaction to severe stress, and adjustment disorder"] <- s
l
ggplot(Phen.data.tot) +
# Add the stacked bar
geom_bar(aes(phenotype, fill=stage), stat="count", alpha=0.5) +
scale_fill_viridis(name = "Stage:", labels = c("Long (90, )", "Post (30, 90]", "Acute (-14, 30]", "Pre ( ,-14]"),discrete=TRUE)+
ggplot2::annotate("text", x=rep(max(label_data_Phen$id),4),y = c(0, 10, 20, 30), label = c("", "10", "20", "30") , color="grey", size=4 , fontface = "bold", angle=0, hjust=1) +
coord_polar()+
geom_text(data=label_data_Phen, aes(x=id, y=tot+2, label=l, hjust=hjust), color="black",fontface="bold",alpha=0.6, size=4, angle= label_data_Phen$angle, inherit.aes = FALSE ) +
#ggplot2::annotate("text", y = c(0, 5, 10, 15, 20), label = c("0", "5", "10", "15", "20") , color="grey", size=3 , angle=0, hjust=1) +
theme_minimal() +
theme(
#legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
#panel.grid = element_blank(),
plot.margin = unit(rep(-2,5), "cm")
)
ggplot(Phen.data.tot) +
# Add the stacked bar
geom_bar(aes(phenotype, fill=stage), stat="count", alpha=0.5) +
scale_fill_viridis(name = "Stage:", labels = c("Long (90, )", "Post (30, 90]", "Acute (-14, 30]", "Pre ( ,-14]"),discrete=TRUE)+
ggplot2::annotate("text", x=rep(max(label_data_Phen$id),4),y = c(0, 10, 20, 30), label = c("", "10", "20", "30") , color="grey", size=4 , fontface = "bold", angle=0, hjust=1) +
coord_polar()+
geom_text(data=label_data_Phen, aes(x=id, y=tot+2, label=phenotype, hjust=hjust), color="black",fontface="bold",alpha=0.6, size=4, angle= label_data_Phen$angle, inherit.aes = FALSE ) +
#ggplot2::annotate("text", y = c(0, 5, 10, 15, 20), label = c("0", "5", "10", "15", "20") , color="grey", size=3 , angle=0, hjust=1) +
theme_minimal() +
theme(
#legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
#panel.grid = element_blank(),
plot.margin = unit(rep(-2,5), "cm")
)
View(PatientObservations)
View(PatientSummary)
install.packages("devtools")
install.packages("devtools")
install.packages("roxygen2")
getwd()
setwd("C:/Users/rebim/Desktop/Tesi/PASC Analysis/Rule based Phenotyping")
devtools::create("pascPhen")
View(GLM.output)
# make sure the package is installed --> devtools::install_github("hestiri/mlho")
library(mlho)
dems <- PatientSummary%>%
select(patient_num, sex, age_group)%>%
mutate(age_group = as.factor(age_group), sex = as.factor(sex))
dems <- PatientSummary dplyr::%>%
View(PatientObservationsExcl)
?mutate
View(PatientObservations)
View(GLM.output)
rules <- read_excel("C:/Users/rebim/Desktop/Tesi/PASC Analysis/Rule based Phenotyping/PASCPhenRules.xlsx")
# make sure the package is installed --> devtools::install_github("hestiri/mlho")
library(mlho)
if(!require(pacman)) install.packages("pacman")
pacman::p_load(data.table, devtools, backports, Hmisc, tidyr,dplyr,ggplot2,plyr,scales,readr,Rmisc,
httr, DT, lubridate, tidyverse,reshape2,foreach,doParallel,caret,gbm,lubridate,praznik,readxl)
rules <- read_excel("C:/Users/rebim/Desktop/Tesi/PASC Analysis/Rule based Phenotyping/PASCPhenRules.xlsx")
rules <- na.omit(rules)
colnames(rules)[1] <- "PASC_Phenotype"
PatientObservations <- read.csv("C:/Users/rebim/Desktop/Tesi/PASC Analysis/Dati ICSM 4CE/LocalPatientObservations.csv")
PatientSummary<- read.csv("C:/Users/rebim/Desktop/Tesi/PASC Analysis/Dati ICSM 4CE/LocalPatientSummary.csv")
#PatientObservations <- PatientObservations%>%mutate(patient_num=as.character(patient_num))
PatientSummary <- PatientSummary%>%mutate(age_group = case_when((age_group == "80plus" | age_group == "70to79") ~ "70plus",
TRUE ~ "12to69")) #let's binarize age
#Parameters
days <- 15
phen <- "Neurological Deficits"
rulesPhen <- rules%>%filter(PASC_Phenotype == phen)
source("createLabels.R")
labeldt <- createLabels(days, rulesPhen, PatientObservations)
View(labeldt)
dems <- dplyr::select(PatientSummary, patient_num, sex, age_group)]
dems <- dplyr::select(PatientSummary, patient_num, sex, age_group)
View(dems)
PatientObservationsExcl <- PatientObservations%>%
filter(!(paste(gsub(".*-", "", PatientObservations$concept_type), PatientObservations$concept_code) %in% paste(rulesPhen$Coding, rulesPhen$Code))) %>% # let's exclude codes used to define the phenotype
mutate(phenx = paste(concept_type,concept_code, sep = "_"))
days.lonh <- 15
days.long <- 15
dbmart <- dplyr::filter(PatientObservations.excl, days_since_admission > days.long)
PatientObservations.excl <- dplyr::filter(PatientObservations,
!(paste(gsub(".*-", "", PatientObservations$concept_type), PatientObservations$concept_code) %in% paste(rulesPhen$Coding, rulesPhen$Code))) # let's exclude codes used to define the phenotype
PatientObservations.excl <- dplyr::mutate(PatientObservations.excl, phenx = paste(concept_type,concept_code, sep = "_"))
dbmart <- dplyr::filter(PatientObservations.excl, days_since_admission > days.long)
dbmart <- dplyr::mutate(dbmart[,c('patient_num', 'phenx')], DESCRIPTION = phenx)
dbmartPhen <- PatientObservationsExcl%>%
filter(days_since_admission > days)%>%
select(patient_num,phenx)%>%
mutate(DESCRIPTION = phenx) #used for phenotyping
# make sure the package is installed --> devtools::install_github("hestiri/mlho")
library(mlho)
if(!require(pacman)) install.packages("pacman")
pacman::p_load(data.table, devtools, backports, Hmisc, tidyr,dplyr,ggplot2,plyr,scales,readr,Rmisc,
httr, DT, lubridate, tidyverse,reshape2,foreach,doParallel,caret,gbm,lubridate,praznik,readxl, ggridges)
#library(readxl)
#library(dplyr)
#library(tidyverse)
#library(ggplot2)
#library(ggridges)
PatientObservations <- read.csv("C:/Users/rebim/Desktop/Tesi/PASC Analysis/Dati ICSM 4CE/LocalPatientObservations.csv")
PatientSummary<- read.csv("C:/Users/rebim/Desktop/Tesi/PASC Analysis/Dati ICSM 4CE/LocalPatientSummary.csv")
rules <- read_excel("C:/Users/rebim/Desktop/Tesi/PASC Analysis/Rule based Phenotyping/PASCPhenRules.xlsx")
rules <- na.omit(rules)
colnames(rules)[colnames(rules)=="PASC Phenotype"]<-"PASC_Phenotype"
PatientObservations <- PatientObservations%>%mutate(patient_num=as.character(patient_num))
PatientSummary <- PatientSummary%>%mutate(age_group = case_when((age_group == "80plus" | age_group == "70to79") ~ "70plus",
TRUE ~ "12to69")) #let's binarize age
PatientObservations <- PatientObservations%>%
select(-value,-siteid)
data <- PatientSummary %>%
select(patient_num, sex, admission_date) %>%
merge(PatientObservations, by = "patient_num")
data$calendar_date <- as.Date(data$admission_date)+data$days_since_admission
data <- data %>%
mutate(stage = case_when(days_since_admission > 90 ~ "long",
days_since_admission > 30 ~ "post",
days_since_admission > -14 ~ "acute",
TRUE ~ 'pre'))%>%
select(c(1,2,3,4,7,8,5,6)) %>%
mutate(stage = factor(stage, levels = c("pre", "acute", "post", "long")))
phenotypes <- unique(rules$PASC_Phenotype)
tot.count <- data.frame()
Phen.data.tot <- data.frame()
for (i in 1:length(phenotypes)) {
Phen.rules <- rules %>% filter(PASC_Phenotype == phenotypes[i])
Phen.data <- data[paste(gsub(".*-", "", data$concept_type), data$concept_code) %in% paste(Phen.rules$Coding, Phen.rules$Code),]
counts <- table(Phen.data%>%select(stage))
if (sum(counts)>0) {
tot.count<-rbind(tot.count,c(phenotypes[i], counts))
Phen.data$phenotype <- paste(phenotypes[i])
Phen.data.tot<-rbind(Phen.data.tot, Phen.data)
}
}
names(tot.count)<- c("Phenotype", "pre", "acute", "post", "long")
tot.count
ggplot(Phen.data.tot, aes(y = fct_rev(fct_infreq(phenotype)), x = as.numeric(days_since_admission), fill = phenotype)) +
geom_density_ridges(scale = 3, rel_min_height = 0.01, alpha = 0.9) +
theme_minimal() +
theme(legend.position = "none") +
labs(x = "Days since admission", y = "", title = "Phenotype distribution")
Phen.data.tot<-Phen.data.tot %>% mutate(stage = factor(stage, levels = c("long", "post", "acute", "pre")))
ggplot(Phen.data.tot, aes(y="sex", fill = stage))+
geom_bar()+
facet_grid(fct_infreq(phenotype)~ ., switch = "y")+
theme_minimal()+
scale_y_discrete(position = "right")+
scale_fill_brewer(name = "Stage:", labels = c("Long (90, )", "Post (30, 90]", "Acute (-14, 30]", "Pre ( ,-14]"))+
theme(strip.text.y.left = element_text(angle = 0))+
labs(y = "", x = "Counts", title = "Phenotype occurences stratified by sex")
ggplot(Phen.data.tot, aes(y="sex", fill = stage))+
geom_bar()+
facet_grid(fct_infreq(phenotype)~ ., switch = "y")+
theme_minimal()+
scale_y_discrete(position = "right")+
scale_fill_brewer(name = "Stage:", labels = c("Long (90, )", "Post (30, 90]", "Acute (-14, 30]", "Pre ( ,-14]"))+
theme(strip.text.y.left = element_text(angle = 0))+
labs(y = "", x = "Counts", title = "Phenotype occurences stratified by sex")
ggplot(Phen.data.tot, aes(y=sex, fill = stage))+
geom_bar()+
facet_grid(fct_infreq(phenotype)~ ., switch = "y")+
theme_minimal()+
scale_y_discrete(position = "right")+
scale_fill_brewer(name = "Stage:", labels = c("Long (90, )", "Post (30, 90]", "Acute (-14, 30]", "Pre ( ,-14]"))+
theme(strip.text.y.left = element_text(angle = 0))+
labs(y = "", x = "Counts", title = "Phenotype occurences stratified by sex")
colnames(Phen.data.tot)=="sex"
Phen.data.tot[,"sex"]
a<-Phen.data.tot[,"sex"]
ggplot(Phen.data.tot, aes(y=a, fill = stage))+
geom_bar()+
facet_grid(fct_infreq(phenotype)~ ., switch = "y")+
theme_minimal()+
scale_y_discrete(position = "right")+
scale_fill_brewer(name = "Stage:", labels = c("Long (90, )", "Post (30, 90]", "Acute (-14, 30]", "Pre ( ,-14]"))+
theme(strip.text.y.left = element_text(angle = 0))+
labs(y = "", x = "Counts", title = "Phenotype occurences stratified by sex")
ggplot(Phen.data.tot, aes(y=sex, fill = stage))+
geom_bar()+
facet_grid(fct_infreq(phenotype)~ ., switch = "y")+
theme_minimal()+
scale_y_discrete(position = "right")+
scale_fill_brewer(name = "Stage:", labels = c("Long (90, )", "Post (30, 90]", "Acute (-14, 30]", "Pre ( ,-14]"))+
theme(strip.text.y.left = element_text(angle = 0))+
labs(y = "", x = "Counts", title = "Phenotype occurences stratified by sex")
ggplot(Phen.data.tot, aes(y=a, fill = stage))+
geom_bar()+
facet_grid(fct_infreq(phenotype)~ ., switch = "y")+
theme_minimal()+
scale_y_discrete(position = "right")+
scale_fill_brewer(name = "Stage:", labels = c("Long (90, )", "Post (30, 90]", "Acute (-14, 30]", "Pre ( ,-14]"))+
theme(strip.text.y.left = element_text(angle = 0))+
labs(y = "", x = "Counts", title = "Phenotype occurences stratified by sex")
ggplot(Phen.data.tot, aes(y=sex, fill = stage))+
geom_bar()+
facet_grid(fct_infreq(phenotype)~ ., switch = "y")+
theme_minimal()+
scale_y_discrete(position = "right")+
scale_fill_brewer(name = "Stage:", labels = c("Long (90, )", "Post (30, 90]", "Acute (-14, 30]", "Pre ( ,-14]"))+
theme(strip.text.y.left = element_text(angle = 0))+
labs(y = "", x = "Counts", title = "Phenotype occurences stratified by sex")
devtools::document()
getwd()
setwd("C:/Users/rebim/Desktop/Tesi/PASC Analysis/Rule based Phenotyping/pascPhen")
devtools::document()
rm(list = c("createLabels"))
devtools::document()
?mlho_features
?createLabels
?phenDistribution
?phen_distribution
devtools::document()
?phen_distribution
usethis::use_package()
usethis::use_package("dplyr")
usethis::use_package("ggplot2")
usethis::use_package("ggridges")
usethis::use_package("tidyverse")
usethis::use_package("forcats")
devtools::document()
usethis::use_package("data.table")
usethis::use_package("mlho")
usethis::use_package("stats")
person("Rebecca", "Mesa", email = "rebi.mesa@gmail.com", role = c("aut", "cre"))
View(rules)
usethis::use_data(rules)
desc::desc_add_author("Rebecca", "Mesa", "rebi.mesa@gmail.com", role = c("aut", "cre"))
devtools::load_all()
load("rules")
data("rules")
View(rules)
PatientObservations <- read.csv("C:/Users/rebim/Desktop/Tesi/PASC Analysis/Dati ICSM 4CE/LocalPatientObservations.csv")
PatientSummary<- read.csv("C:/Users/rebim/Desktop/Tesi/PASC Analysis/Dati ICSM 4CE/LocalPatientSummary.csv")
pascPhen::phen_distribution(PatientObservations,PatientSummary,rules)
pascPhen::phen_distribution(PatientObservations,PatientSummary,rules, stratified_by = "sex")
pascPhen::mlho_features(PatientObservations, PatientSummary,rules,days.long = 15,phenotype = "Neurological Deficits", MSMR.topn = 50,classifier = "GLM")
devtools::load_all()
pascPhen::mlho_features(PatientObservations, PatientSummary,rules,days.long = 15,phenotype = "Neurological Deficits", MSMR.topn = 50,classifier = "GLM")
devtools::load_all()
pascPhen::mlho_features(PatientObservations, PatientSummary,rules,days.long = 15,phenotype = "Neurological Deficits", MSMR.topn = 50,classifier = "GLM")
rlang::last_error()
devtools::load_all()
pascPhen::mlho_features(PatientObservations, PatientSummary,rules,days.long = 15,phenotype = "Neurological Deficits", MSMR.topn = 50,classifier = "GLM")
days.long <-15
phenotype <- "Neurological Deficits"
MSMR.topn <- 50
classifier <- "GLM"
rules.phen <- dplyr::filter(rules, PASC_Phenotype == phenotype)
View(rules.phen)
PatientObservations <- dplyr::mutate(PatientObservations, patient_num=as.character(patient_num))
PatientSummary <- dplyr::mutate(PatientSummary, age_group = dplyr::case_when((age_group == "80plus" | age_group == "70to79") ~ "70plus",
TRUE ~ "12to69")) #let's binarize age
labeldt <- createLabels(days.long, rules.phen, PatientObservations)
View(labeldt)
dems <- PatientSummary %>%
dplyr::select(patient_num, sex, age_group)%>%
dplyr::mutate(age_group = as.factor(age_group), sex = as.factor(sex))
View(dems)
PatientObservations.excl <- PatientObservations %>%
dplyr::filter(!(paste(gsub(".*-", "", PatientObservations$concept_type), PatientObservations$concept_code) %in% paste(rules.phen$Coding, rules.phen$Code)))%>% # let's exclude codes used to define the phenotype
dplyr::mutate(phenx = paste(concept_type,concept_code, sep = "_"))
prediction <- FALSE
if (prediction) {
dbmart <- dplyr::filter(PatientObservations.excl, days_since_admission < days.pre) #prediction
} else {
dbmart <- dplyr::filter(PatientObservations.excl, days_since_admission > days.long) #phenotyping
}
View(dbmart)
dbmart <- dplyr::mutate(dbmart[,c('patient_num', 'phenx')], DESCRIPTION = phenx)
View(dbmart)
data.table::setDT(dbmart)
View(dbmart)
dbmart[,row := .I]
View(dbmart)
dbmart$value.var <- 1
View(dbmart)
dbmart <- dplyr::filter(PatientObservations.excl, days_since_admission > days.long) #phenotyping
dbmart <- dplyr::mutate(dbmart[,c('patient_num', 'phenx')], DESCRIPTION = phenx)
data.table::setDT(dbmart)
dbmart[,row data.table::':'= .I]
dbmart[,row data.table::`:=` .I]
dbmart[,row data.table::`:=`(.I)]
dbmart[,row :=.I]
dbmart$value.var <- 1
pascPhen::mlho_features(PatientObservations, PatientSummary,rules,days.long = 15,phenotype = "Neurological Deficits", MSMR.topn = 50,classifier = "GLM")
devtools::load_all()
pascPhen::mlho_features(PatientObservations, PatientSummary,rules,days.long = 15,phenotype = "Neurological Deficits", MSMR.topn = 50,classifier = "GLM")
devtools::document()
devtools::load_all()
pascPhen::mlho_features(PatientObservations, PatientSummary,rules,days.long = 15,phenotype = "Neurological Deficits", MSMR.topn = 50,classifier = "GLM")
pascPhen::mlho_features(PatientObservations, PatientSummary,rules,days.long = 15,phenotype = "Neurological Deficits", MSMR.topn = 50,classifier = "GLM")
View(dbmart)
View(labeldt)
View(dems)
View(PatientSummary)
PatientObservations <- read.csv("C:/Users/rebim/Desktop/Tesi/PASC Analysis/Dati ICSM 4CE/LocalPatientObservations.csv")
PatientSummary<- read.csv("C:/Users/rebim/Desktop/Tesi/PASC Analysis/Dati ICSM 4CE/LocalPatientSummary.csv")
pascPhen::mlho_features(PatientObservations, PatientSummary,rules,days.long = 15,phenotype = "Neurological Deficits", MSMR.topn = 50,classifier = "GLM")
View(dems)
View(dbmart)
View(model.output)
pascPhen::mlho_features(PatientObservations, PatientSummary,rules,days.long = 15,phenotype = "Neurological Deficits", MSMR.topn = 50,classifier = "GLM")
file.exists("~/.ssh/id_rsa.pub")
